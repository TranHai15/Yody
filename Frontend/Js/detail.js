// *** X·ª≠ l√Ω ·∫£nh s·∫£n ph·∫©m ***

document.querySelectorAll(".detail__left--item img").forEach((thumbnail) => {
  thumbnail.addEventListener("click", (event) => {
    const bigImage = document.querySelector(".detail__right--img img");
    const thumbnailSrc = event.target.getAttribute("src");

    // C·∫≠p nh·∫≠t ·∫£nh l·ªõn
    bigImage.setAttribute("src", thumbnailSrc);

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i active
    document
      .querySelectorAll(".detail__left--item")
      .forEach((item) => item.classList.remove("active--detail__left--item"));
    event.target.parentElement.classList.add("active--detail__left--item");
  });
});

// *** X·ª≠ l√Ω s·ªë l∆∞·ª£ng s·∫£n ph·∫©m ***
let soluongchon = 1;
const getNumberSanpham = parseInt(
  document.querySelector(".size-option").getAttribute("data-quantity"),
  10
);

// C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
function updateSoLuongChon(change) {
  const soluongchonElement = document.getElementById("soluongchon");
  const decreaseButton = document.getElementById("decrease");

  soluongchon = Math.min(getNumberSanpham, Math.max(1, soluongchon + change));
  soluongchonElement.textContent = soluongchon;

  decreaseButton.classList.toggle("disabled", soluongchon === 1);
}

// *** X·ª≠ l√Ω ch·ªçn k√≠ch th∆∞·ªõc s·∫£n ph·∫©m ***
let getSizeValue = document
  .querySelector(".size-option")
  .getAttribute("data-sizeId");

document.addEventListener("DOMContentLoaded", () => {
  const sizeOptions = document.querySelectorAll(".size-option");

  sizeOptions.forEach((option) => {
    option.addEventListener("click", () => {
      const sizeId = option.getAttribute("data-sizeId");
      const size = option.getAttribute("data-size");

      document
        .querySelectorAll(".size-option")
        .forEach((opt) => opt.classList.remove("active__size"));
      option.classList.add("active__size");

      document.querySelector(".value__size").innerText = size;
      document.querySelector(".detail__right-code .value__size").innerText =
        size;
      document.querySelector(".size-label .size__value").innerText = size;

      getSizeValue = sizeId;
    });
  });
});

// *** Hi·ªÉn th·ªã th√¥ng b√°o ***
function showNotification(message, type = "success") {
  const notification = document.createElement("section");
  notification.className = `notification ${type}`;
  notification.innerHTML = `<div><p>${message}</p></div>`;

  document.body.appendChild(notification);

  setTimeout(() => {
    notification.style.opacity = "0";
    setTimeout(() => notification.remove(), 500);
  }, 5000);
}

// *** X·ª≠ l√Ω th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng ***
const detail = document.querySelector(".detail");
const userId = detail.getAttribute("data-userId");
getnumber(userId);
document.querySelector(".add__cart").addEventListener("click", () => {
  const variationId = detail.getAttribute("data-variationId");
  const salePrice = detail
    .querySelector(".detail__right--price--new")
    .getAttribute("data-price");
  const tonggia = parseInt(salePrice, 10);

  if (soluongchon > getNumberSanpham) {
    alert("S·ªë l∆∞·ª£ng kh√¥ng ƒë·ªß!");
    return;
  }

  if (!userId) {
    alert("Vui l√≤ng ƒëƒÉng nh·∫≠p!");
    localStorage.setItem("dangnhapmuahang", window.location.href);
    window.location.href = "/Yody/auth?action=login";
    return;
  }

  fetch(
    `Backend/controller/client/clientAjax.php?addcart=${userId}&variationId=${variationId}&sizeId=${getSizeValue}&quantity=${soluongchon}&price=${tonggia}`
  )
    .then((res) => {
      if (!res.ok) throw new Error(`Fetch error: ${res.status}`);
      return res.json();
    })
    .then((data) => {
      showNotification(data.message, data.status);
      if (data.status === "success") {
        getnumber(userId);
      }
    })
    .catch((error) => {
      console.error("Error connecting to server:", error);
    });
});

// *** C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng ***
function getnumber(userId) {
  fetch(`Backend/controller/client/clientAjax.php?soluong=${userId}`)
    .then((res) => {
      if (!res.ok) throw new Error(`Fetch error: ${res.status}`);
      return res.json();
    })
    .then((data) => {
      if (data.status === "success") {
        const soluong = data.soluong;
        console.log("soluong", soluong);
        if (soluong == null) {
          document.querySelector(".soluongCart").style.display = "none";
          localStorage.removeItem("cartNumber");
          return;
        } else {
          document.querySelector(".soluongCart").style.display = "block";
          localStorage.setItem("cartNumber", soluong);
          document.querySelector(".numberCart").innerText = soluong;
        }
      } else {
        showNotification(data.message, data.status);
      }
    })
    .catch((error) => {
      console.error("Error connecting to server:", error);
    });
}
// console.log(document.querySelector(".cate__new"));
document.querySelector(".cate__new").addEventListener("click", () => {
  const variationId = detail.getAttribute("data-variationId");
  const salePrice = detail
    .querySelector(".detail__right--price--new")
    .getAttribute("data-price");
  const tonggia = parseInt(salePrice, 10);

  if (soluongchon > getNumberSanpham) {
    alert("S·ªë l∆∞·ª£ng kh√¥ng ƒë·ªß!");
    return;
  }

  if (!userId) {
    alert("Vui l√≤ng ƒëƒÉng nh·∫≠p!");
    localStorage.setItem("dangnhapmuahang", window.location.href);
    window.location.href = "/Yody/auth?action=login";
    return;
  }

  fetch(
    `Backend/controller/client/clientAjax.php?addcart=${userId}&variationId=${variationId}&sizeId=${getSizeValue}&quantity=${soluongchon}&price=${tonggia}`
  )
    .then((res) => {
      if (!res.ok) throw new Error(`Fetch error: ${res.status}`);
      return res.json();
    })
    .then((data) => {
      // showNotification(data.message, data.status);
      if (data.status === "success") {
        getnumber(userId);
        window.location.href = `/Yody/cart?id=${userId}`;
      }
    })
    .catch((error) => {
      console.error("Error connecting to server:", error);
    });
});

//

function submitComment() {
  var commentText = document.getElementById("commentText").value;
  // console.log("üöÄ ~ submitComment ~ commentText:", commentText);
  const productId = document
    .querySelector(".detail")
    .getAttribute("data-productId");
  const userId = document.querySelector(".detail").getAttribute("data-userId");

  if (commentText) {
    // console.log("ƒê√£ g·ª≠i b√¨nh lu·∫≠n: ", commentText);
    document.getElementById("commentText").value = ""; // X√≥a √¥ nh·∫≠p sau khi g·ª≠i
    fetch(
      `Backend/controller/client/clientAjax.php?addComment=${productId}&content=${commentText}&userId=${userId}`
    )
      .then((res) => {
        if (!res.ok) throw new Error(`Fetch error: ${res.status}`);
        return res.json();
      })
      .then((data) => {
        // showNotification(data.message, data.status);
        if (data.status === "success") {
          location.reload();
        }
      })
      .catch((error) => {
        console.error("Error connecting to server:", error);
      });
  } else {
    return;
  }
}

//
// L·∫•y t·∫•t c·∫£ c√°c n√∫t v√† c√°c ph·∫ßn n·ªôi dung
const buttons = document.querySelectorAll(".btn-bl");
const sections = document.querySelectorAll(".comment, .feedback");

buttons.forEach((button) => {
  button.addEventListener("click", () => {
    // Lo·∫°i b·ªè class "active" c·ªßa t·∫•t c·∫£ c√°c n√∫t
    buttons.forEach((btn) => btn.classList.remove("active"));
    // Th√™m class "active" cho n√∫t hi·ªán t·∫°i
    button.classList.add("active");

    // ·∫®n t·∫•t c·∫£ c√°c ph·∫ßn n·ªôi dung
    sections.forEach((section) => (section.style.display = "none"));

    // Hi·ªÉn th·ªã ph·∫ßn n·ªôi dung t∆∞∆°ng ·ª©ng
    const btn = button.getAttribute("data-view");
    document.querySelector(`.${btn}`).style.display = "block";
  });
});
